{"version":3,"sources":["techniposter_frontend/subs.cljs"],"mappings":";AAIA,AAAAA,AAAA;AAAAC,AAEC,AAAKE;AAAL,AACE,AAAA,AAAOA;;AAHV,AAAA,AAAAH,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;AAKD,AAAAE,AAAA;AAAAC,AAEC,AAAKF;AAAL,AACE,AAAA,AAAWA;;AAHd,AAAA,AAAAC,AAAAC,AAAAD,AAAAC,AAACH,AAAAA,AAAAA;AAKD,AAAAI,AAAA;AAAAC,AAEC,AAAKJ;AAAL,AACE,AAAA,AAAK,AAAA,AAAOA;;AAHf,AAAA,AAAAG,AAAAC,AAAAD,AAAAC,AAACL,AAAAA,AAAAA;AAKD,AAAAM,AAAA;AAAAC,AAEC,AAAKN;AAAL,AACE,AAAA,AAAOA;;AAHV,AAAA,AAAAK,AAAAC,AAAAD,AAAAC,AAACP,AAAAA,AAAAA;AAKD,AAAAQ,AAAA;AAAAC,AAEC,AAAKR;AAAL,AACE,AAAA,AAAkBA;;AAHrB,AAAA,AAAAO,AAAAC,AAAAD,AAAAC,AAACT,AAAAA,AAAAA;AAKD,AAAAU,AAAA;AAAAC,AAEC,AAAKV;AAAL,AACE,AAAA,AAAeA;;AAHlB,AAAA,AAAAS,AAAAC,AAAAD,AAAAC,AAACX,AAAAA,AAAAA;AAKD,AAAA,AAAMY,AACHC,AAAGC;AADN,AAEE,AAACC,AAAM,AAAA,AAAAC,AAACC;AAAD,AAAS,AAACC,AAAE,AAAA,AAAAF,AAAQH;AAAIC;;AAEjC,AAAA,AAAMK,AACHC,AAAKC;AADR,AAEE,AAAA,AAAoCA,AAAMD;;AAE5C,AAAAE,AAAA;AAAAC,AAEC,AAAKE;AAAL,AACE,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AAHJH,AAKC,AAAKV,AAAOc;AAAZ,AACE,AAAAC,AAAaD;AAAb,AAAAE,AAAAD,AAAA,AAAA,AAAOJ;AAAP,AAAAK,AAAAD,AAAA,AAAA,AAAShB;AACHkB,AAAM,AAACnB,AAAgBC,AAAGC;AADhC,AAEK,AAAA,AAACK,AAAe,AAAA,AAAcY;;AARtC,AAAA,AAAAT,AAAAC,AAAAC,AAAAF,AAAAC,AAAAC,AAACxB,AAAAA,AAAAA;AAUD,AAAAgC,AAAA;AAAAC,AAEC,AAAKR;AAAL,AACE,AAAAU,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACR,AAAAA,AAAAA;;AAHJO,AAKC,AAAKH,AAAMN;AAAX,AACI,AAAA,AAACN,AAAe,AAAA,AAAcY;;AANnC,AAAA,AAAAC,AAAAC,AAAAC,AAAAF,AAAAC,AAAAC,AAAClC,AAAAA,AAAAA","names":["G__43846","G__43847","re-frame.core/reg-sub","db","G__43848","G__43849","G__43850","G__43851","G__43852","G__43853","G__43854","G__43855","G__43856","G__43857","techniposter-frontend.subs/get-movie-by-id","id","movies","cljs.core/first","p1__43858#","cljs.core.filter","cljs.core._EQ_","techniposter-frontend.subs/tmdb-image-url","path","width","G__43859","G__43860","G__43861","_","G__43862","re-frame.core/subscribe","args","vec__43863","cljs.core.nth","movie","G__43866","G__43867","G__43868","G__43869"],"sourcesContent":["(ns techniposter-frontend.subs\n  (:require\n   [re-frame.core :as re-frame]))\n\n(re-frame/reg-sub\n ::name\n (fn [db]\n   (:name db)))\n\n(re-frame/reg-sub\n ::loading?\n (fn [db]\n   (:loading? db)))\n\n(re-frame/reg-sub\n ::page\n (fn [db]\n   (inc (:page db))))\n\n(re-frame/reg-sub\n ::page-size\n (fn [db]\n   (:size db)))\n\n(re-frame/reg-sub\n ::movies\n (fn [db]\n   (:moviesPagianted db)))\n\n(re-frame/reg-sub\n ::movie-detail\n (fn [db]\n   (:movie-detail db)))\n\n(defn get-movie-by-id\n  [id movies]\n  (first (filter #(= (:id %) id) movies)))\n\n(defn tmdb-image-url\n  [path width]\n  (str \"https://image.tmdb.org/t/p/w\" width path))\n\n(re-frame/reg-sub\n ::get-poster\n (fn [_]\n   (re-frame/subscribe [::movies]))\n \n (fn [movies args]\n   (let [[_ id] args\n         movie (get-movie-by-id id movies)]\n        (tmdb-image-url (:poster_path movie) 500))))\n\n(re-frame/reg-sub\n ::get-poster-detail\n (fn [_]\n   (re-frame/subscribe [::movie-detail]))\n\n (fn [movie _]\n     (tmdb-image-url (:poster_path movie) 500)))"]}